CREATE OR REPLACE VIEW PLATBY_VIEW AS
SELECT
    p.ID_PLATBY,
    p.CAS_PLATBY,
    p.VYSE_PLATBY,
    p.TYP_PLATBY,
    CASE
        WHEN p.TYP_PLATBY = 0 THEN 'Platba kartou'
        WHEN p.TYP_PLATBY = 1 THEN 'Platba převodem'
        ELSE 'Neznámý typ platby'
        END AS TYP_PLATBY_TEXT,
    z.ID_ZAKAZNIKA,
    u.JMENO || ' ' || u.PRIJMENI AS JMENO_ZAKAZNIKA,
    CASE
        WHEN p.TYP_PLATBY = 0 THEN pk.CISLO_KARTY
        WHEN p.TYP_PLATBY = 1 THEN pp.CISLO_UCTU
        ELSE NULL
        END AS DETAIL_PLATBY
FROM
    ST67028.PLATBY p
        JOIN ST67028.ZAKAZNICI z ON p.ID_ZAKAZNIKA = z.ID_ZAKAZNIKA
        JOIN ST67028.UZIVATELE u ON z.ID_UZIVATELE = u.ID_UZIVATELE
        LEFT JOIN ST67028.PLATBY_KARTOU pk ON p.ID_PLATBY = pk.ID_PLATBY
        LEFT JOIN ST67028.PLATBY_PREVODEM pp ON p.ID_PLATBY = pp.ID_PLATBY;
/

CREATE OR REPLACE PROCEDURE FIND_PLATBY_BY_ZAKAZNIK (
    p_id_zakaznika IN NUMBER,
    p_result OUT SYS_REFCURSOR
)
AS
BEGIN
    OPEN p_result FOR
        SELECT
            ID_PLATBY,
            CAS_PLATBY,
            VYSE_PLATBY,
            TYP_PLATBY,
            DETAIL_PLATBY
        FROM
            PLATBY_VIEW
        WHERE
            ID_ZAKAZNIKA = p_id_zakaznika
        ORDER BY CAS_PLATBY;
END;
/

CREATE OR REPLACE TRIGGER UPDATE_ZUSTATEK_TGR
    AFTER INSERT ON ST67028.PLATBY
    FOR EACH ROW
DECLARE
    v_id_karty NUMBER;
    v_exists NUMBER;
BEGIN
    -- Získání ID karty spojené s platbou, pokud existuje
    SELECT k.ID_KARTY
    INTO v_id_karty
    FROM KARTY_MHD k
             JOIN ZAKAZNICI z ON k.ID_ZAKAZNIKA = z.ID_ZAKAZNIKA
    WHERE z.ID_ZAKAZNIKA = :NEW.ID_ZAKAZNIKA
      AND ROWNUM = 1;

    -- Pokud karta existuje v tabulce PREDPLATNE, jedná se kartu, která se platí za období a neslouží k placení lístků
    SELECT COUNT(*)
    INTO v_exists
    FROM PREDPLATNE
    WHERE ID_KARTY = v_id_karty;

    IF v_exists = 0 THEN
        UPDATE KARTY_MHD
        SET ZUSTATEK = ZUSTATEK + :NEW.VYSE_PLATBY
        WHERE ID_KARTY = v_id_karty;
    END IF;

EXCEPTION
    WHEN NO_DATA_FOUND THEN
        NULL;
    WHEN OTHERS THEN
        RAISE;
END UPDATE_ZUSTATEK_TGR;
/

INSERT INTO ST67028.ZAKAZNICI (ID_ZAKAZNIKA, ID_UZIVATELE)
VALUES (1, 1); -- Odkaz na Baily Truelock

INSERT INTO ST67028.ZAKAZNICI (ID_ZAKAZNIKA, ID_UZIVATELE)
VALUES (2, 2); -- Odkaz na Rina Trippitt

INSERT INTO ST67028.PLATBY (ID_PLATBY, CAS_PLATBY, VYSE_PLATBY, ID_ZAKAZNIKA, TYP_PLATBY)
VALUES (1, TO_DATE('2024-11-15', 'YYYY-MM-DD'), 200.50, 1, 0); -- TYP_PLATBY = 0 (kartou)

INSERT INTO ST67028.PLATBY (ID_PLATBY, CAS_PLATBY, VYSE_PLATBY, ID_ZAKAZNIKA, TYP_PLATBY)
VALUES (2, TO_DATE('2024-11-20', 'YYYY-MM-DD'), 450.00, 2, 1); -- TYP_PLATBY = 1 (převodem)

INSERT INTO ST67028.PLATBY_KARTOU (ID_PLATBY, CISLO_KARTY, JMENO_MAJITELE)
VALUES (1, '1234123412341234', 'Baily Truelock');

INSERT INTO ST67028.PLATBY_PREVODEM (ID_PLATBY, CISLO_UCTU)
VALUES (2, 'CZ9876543210123456');